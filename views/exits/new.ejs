<% layout('layouts/boilerplate')%>
<div class="row">
    <div class = ' d-flex justify-content-center align-items-center mb-4 mt-4'>
        <div class="pop-up-container "><h5 class="display-3 font-weight-bold text-center" style="font-family: Helvetica, Arial, sans-serif; color: #4A4A4A; text-transform: uppercase; letter-spacing: 2px;  font-size: 40px">Crear Pago</h5> </div>
        </div>
    <div class="col-md-6 offset-md-3">
        <form id="form_exit" action="/exits" method="POST" novalidate class="validated-form">
            
            <div class="mb-3">
                <label class="form-label" for="name">Nombre pago</label>
                <input class="form-control" type="text" id="name" name="payment[name]" required>
            </div>
           
            
            <div class="mb-4 mt-4">
                <label class="form-label d-block" for="category">Categoria</label>
            
                <select id="category" class="btn btn-outline-secondary btn-lg custom-select ml-2" name="payment[category]" style="max-width: 300px">
                    <option selected id="general" value="General">General</option>
                    <option id="personal" value="Personal">Personal</option>
                    <option id="operativos" value="Operativos">Operativos (Proveedores)</option>
                    <option id="farmacia" value="Venta de Farmacia">Venta de Farmacia</option>
                    <option id="servicios" value="Servicios">Servicios</option>
                </select>
            </div>
            <div class="mb-4 mt-4">
                <label class="form-label  d-block" for="moneyBox">Caja</label>
                <select id="moneyBox" class="btn btn-outline-secondary btn-lg custom-select ml-2" name="payment[moneyBoxId]" style="max-width: 300px">
                    <% for (let box of boxes) {%>
                        <option <%= currentUser.moneyBox._id.equals(box._id) ? 'selected' : '' %>  id="<%= box._id %>" value="<%= box._id %>" data-hierarchy="<%= box.hierarchy %>"><%= box.name %></option>
                    <% } %>
                </select>
            </div>
            <div class="mb-3">
                <label class="form-label" for="buy">Monto a pagar</label>
                <div class="input-group">
                    <span class="input-group-text" id="price-label">$</span>
                    <input type="number" class="form-control" id="buy" placeholder="0.00" aria-label="price"
                        aria-describedby="price-label" name="payment[moneyAmount]" required>
                </div>   
            </div>
            <div class="mb-3">
                <button type = "submit" class="btn btn-success" id="newPay">Agregar pago</button>
            </div>
        </form>
    </div>
</div>

<script>

    $(document).ready(function() {
    $('#form_exit').submit(async function(e) { 
        e.preventDefault();

    serviceUuid = 'e7810a71-73ae-499d-8c15-faa9aef0c3f2';
   characteristicUuid = 'bef8d6c9-9c21-4c9e-b632-bd58c1009f9f';
    deviceKey = 'lastUsedDevice'; // Key for storing the device address



    // Add patient name and services to the ticket body
    printData1 = new Uint8Array([
    0x1B, 0x70, 0x00, 0x19, 0xFF //linea para abrir la caja
    ]);

// var printData = new Uint8Array([...printData1,...printData2]);
  try {
    //   if(printer){
    //     device = printer
    //   }else{
        device = await navigator.bluetooth.requestDevice({
          filters: [{ name: 'Printer001' ,deviceId:'OsURHI+3wBk8YoxCAZGClg=='}],
          optionalServices: [serviceUuid],
        });
        printer = device;
    //   }    

    const server = await device.gatt.connect();
    const service = await server.getPrimaryService(serviceUuid);
    const characteristic = await service.getCharacteristic(characteristicUuid);
    const encoder = new TextEncoder();

    await characteristic.writeValue(printData1);
    await server.disconnect();
    this.submit();

  } catch (error) {
    console.error(error);
  }  
    });
  //set dates with default values
});

    // plus minus buttons from input
$(".amount" ).on( "click", ".minus", function() {
    const currentValue = parseInt($(this).parent().children(".quantity").val());
    if(currentValue-1>=0){
        $(this).parent().children(".quantity").val(currentValue-1);
    }
  });

$(".amount" ).on( "click", ".plus", function() {
    const currentValue = parseInt($(this).parent().children(".quantity").val());
    if(currentValue+1<999){
        $(this).parent().children(".quantity").val(currentValue+1);
    }
  });
</script>